generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String   // 'level1', 'level2', 'admin'
  createdAt DateTime @default(now())
  passengers Passenger[]
}

model Passenger {
  id            Int      @id @default(autoincrement())
  firstName     String?
  lastName      String?
  gender        String
  phone         String
  nationalCode  String?   @unique
  travelDate    String
  returnDate    String?
  birthDate     String
  travelType    String   // 'normal', 'vip'
  leaderName    String?
  leaderPhone   String?
  createdById   Int
  createdBy     User     @relation(fields: [createdById], references: [id])
  packId        Int?
  pack          Pack?    @relation(fields: [packId], references: [id])
  createdAt     DateTime @default(now())

  @@index([travelDate])
}

model Pack {
  id            Int           @id @default(autoincrement())
  travelDate    DateTime
  type          PackType      @default(normal)
  repository    Int           @default(1)        // 1, 2, 3
  status        PackStatus    // موقتاً @default(pending) رو حذف کردیم
  passengers    Passenger[]
  busAssignment BusAssignment? @relation(fields: [busAssignmentId], references: [id], onDelete: Cascade)
  busAssignmentId Int?         @unique
  history       PackHistory[]
  createdAt     DateTime      @default(now())
  smsHistory    SmsHistory[]

  @@index([travelDate])
}

model BusAssignment {
  id           Int      @id @default(autoincrement())
  company      String
  plate        String
  driver       String
  driverPhone  String
  packId       Int      @unique
  pack         Pack?    @relation
}

model SmsHistory {
  id        Int      @id @default(autoincrement())
  packId    Int
  pack      Pack     @relation(fields: [packId], references: [id])
  text      String
  sentAt    DateTime
  count     Int
  createdAt DateTime @default(now())
}

model PackHistory {
  id        Int      @id @default(autoincrement())
  packId    Int
  status    String
  changedAt DateTime @default(now())
  pack      Pack     @relation(fields: [packId], references: [id], onDelete: Cascade)
}

enum PackType {
  normal
  vip
}

enum PackStatus {
  pending
  assigned
  confirmed
}